
# Account
Account#concept.label = Account
Account.Account(java.lang.Long,java.lang.String)#phrase.navigation = a new {Account} where {0, balance} {1, type}
Account.balance#phrase.action = set the balance of {this} to {balance}
Account.balance#phrase.addition_setter = add {balance} to the balance of {this}
Account.balance#phrase.navigation = {balance} of {this}
Account.balance#phrase.subtraction_setter = subtract {balance} from the balance of {this}
Account.type#phrase.action = set the type of {this} to {type}
Account.type#phrase.navigation = {type} of {this}

# Borrower
Borrower#concept.label = Borrower
Borrower.Borrower(java.util.List,java.lang.Long,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,java.lang.Long)#phrase.navigation = a new {Borrower} where {0, accounts} {1, age} {2, credit history} {3, dependents} {4, housing} {5, installment plans} {6, citizen} {7, job type} {8, lines of credit} {9, phone number} {10, property ownership} {11, role} {12, sex} {13, years at current address} {14, years employed} {15, years with bank}
Borrower.accountses#phrase.action = set the accountses of {this} to {accounts}
Borrower.accountses#phrase.navigation = {accounts} of {this}
Borrower.addTo_accountses(Account)#phrase.action = add {0} to the accountses of {this}
Borrower.age#phrase.action = set the age of {this} to {age}
Borrower.age#phrase.addition_setter = add {age} to the age of {this}
Borrower.age#phrase.navigation = {age} of {this}
Borrower.age#phrase.subtraction_setter = subtract {age} from the age of {this}
Borrower.citizen#phrase.action[0] = {this} gets citizen only if {citizen}
Borrower.citizen#phrase.action[1] = make it {citizen} that {this} is citizen
Borrower.citizen#phrase.action[1].deprecated = true
Borrower.citizen#phrase.navigation = {this} is citizen
Borrower.citizen#phrase.negative_predicate = {this} is not citizen
Borrower.citizen#phrase.negative_predicate_setter = {this} does not get citizen
Borrower.citizen#phrase.positive_predicate_setter = {this} gets citizen
Borrower.clear_accountses()#phrase.action = clear the accountses of {this}
Borrower.creditHistory#phrase.action = set the credit history of {this} to {credit history}
Borrower.creditHistory#phrase.navigation = {credit history} of {this}
Borrower.dependents#phrase.action = set the dependents of {this} to {dependents}
Borrower.dependents#phrase.addition_setter = add {dependents} to the dependents of {this}
Borrower.dependents#phrase.navigation = {dependents} of {this}
Borrower.dependents#phrase.subtraction_setter = subtract {dependents} from the dependents of {this}
Borrower.housing#phrase.action = set the housing of {this} to {housing}
Borrower.housing#phrase.navigation = {housing} of {this}
Borrower.installmentPlans#phrase.action = set the installment plans of {this} to {installment plans}
Borrower.installmentPlans#phrase.navigation = {installment plans} of {this}
Borrower.jobType#phrase.action = set the job type of {this} to {job type}
Borrower.jobType#phrase.navigation = {job type} of {this}
Borrower.linesOfCredit#phrase.action = set the lines of credit of {this} to {lines of credit}
Borrower.linesOfCredit#phrase.addition_setter = add {lines of credit} to the lines of credit of {this}
Borrower.linesOfCredit#phrase.navigation = {lines of credit} of {this}
Borrower.linesOfCredit#phrase.subtraction_setter = subtract {lines of credit} from the lines of credit of {this}
Borrower.phoneNumber#phrase.action = set the phone number of {this} to {phone number}
Borrower.phoneNumber#phrase.navigation = {phone number} of {this}
Borrower.propertyOwnership#phrase.action = set the property ownership of {this} to {property ownership}
Borrower.propertyOwnership#phrase.navigation = {property ownership} of {this}
Borrower.removeFrom_accountses(Account)#phrase.action = remove {0} from the accountses of {this}
Borrower.role#phrase.action = set the role of {this} to {role}
Borrower.role#phrase.navigation = {role} of {this}
Borrower.sex#phrase.action = set the sex of {this} to {sex}
Borrower.sex#phrase.navigation = {sex} of {this}
Borrower.yearsAtCurrentAddress#phrase.action = set the years at current address of {this} to {years at current address}
Borrower.yearsAtCurrentAddress#phrase.addition_setter = add {years at current address} to the years at current address of {this}
Borrower.yearsAtCurrentAddress#phrase.navigation = {years at current address} of {this}
Borrower.yearsAtCurrentAddress#phrase.subtraction_setter = subtract {years at current address} from the years at current address of {this}
Borrower.yearsEmployed#phrase.action = set the years employed of {this} to {years employed}
Borrower.yearsEmployed#phrase.navigation = {years employed} of {this}
Borrower.yearsWithBank#phrase.action = set the years with bank of {this} to {years with bank}
Borrower.yearsWithBank#phrase.addition_setter = add {years with bank} to the years with bank of {this}
Borrower.yearsWithBank#phrase.navigation = {years with bank} of {this}
Borrower.yearsWithBank#phrase.subtraction_setter = subtract {years with bank} from the years with bank of {this}

# Loan
Loan#concept.label = Loan
Loan.Loan(Borrower,Borrower,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.String)#phrase.navigation = a new {Loan} where {0, borrower} {1, co-borrower} {2, duration} {3, installment percent} {4, loan amount} {5, loan purpose}
Loan.borrower#phrase.action = set the borrower of {this} to {borrower}
Loan.borrower#phrase.clearer = clear the borrower of {this}
Loan.borrower#phrase.navigation = {borrower} of {this}
Loan.co$borrower#phrase.action = set the co-borrower of {this} to {co-borrower}
Loan.co$borrower#phrase.clearer = clear the co-borrower of {this}
Loan.co$borrower#phrase.navigation = {co-borrower} of {this}
Loan.duration#phrase.action = set the duration of {this} to {duration}
Loan.duration#phrase.addition_setter = add {duration} to the duration of {this}
Loan.duration#phrase.navigation = {duration} of {this}
Loan.duration#phrase.subtraction_setter = subtract {duration} from the duration of {this}
Loan.installmentPercent#phrase.action = set the installment percent of {this} to {installment percent}
Loan.installmentPercent#phrase.addition_setter = add {installment percent} to the installment percent of {this}
Loan.installmentPercent#phrase.navigation = {installment percent} of {this}
Loan.installmentPercent#phrase.subtraction_setter = subtract {installment percent} from the installment percent of {this}
Loan.loanAmount#phrase.action = set the loan amount of {this} to {loan amount}
Loan.loanAmount#phrase.addition_setter = add {loan amount} to the loan amount of {this}
Loan.loanAmount#phrase.navigation = {loan amount} of {this}
Loan.loanAmount#phrase.subtraction_setter = subtract {loan amount} from the loan amount of {this}
Loan.loanPurpose#phrase.action = set the loan purpose of {this} to {loan purpose}
Loan.loanPurpose#phrase.navigation = {loan purpose} of {this}

# Risk
Risk#concept.label = Risk
Risk.Risk(RiskLevel,RiskLevel,RiskLevel)#phrase.navigation = a new {Risk} where {0, combined value} {1, predictive risk component} {2, relationship risk component}
Risk.combinedValue#phrase.action = set the combined value of {this} to {combined value}
Risk.combinedValue#phrase.clearer = clear the combined value of {this}
Risk.combinedValue#phrase.navigation = {combined value} of {this}
Risk.predictiveRiskComponent#phrase.action = set the predictive risk component of {this} to {predictive risk component}
Risk.predictiveRiskComponent#phrase.clearer = clear the predictive risk component of {this}
Risk.predictiveRiskComponent#phrase.navigation = {predictive risk component} of {this}
Risk.relationshipRiskComponent#phrase.action = set the relationship risk component of {this} to {relationship risk component}
Risk.relationshipRiskComponent#phrase.clearer = clear the relationship risk component of {this}
Risk.relationshipRiskComponent#phrase.navigation = {relationship risk component} of {this}

# RiskLevel
RiskLevel#concept.label = RiskLevel
RiskLevel.high#instance.label = high
RiskLevel.low#instance.label = low
RiskLevel.medium#instance.label = medium
